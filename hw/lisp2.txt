1. Write a Scheme function (combine f g li), where: 
• f is a function that takes an arbitrary number of integer arguments and returns a single integer. Examples of functions like this include the addition function (+ ...) and the multiplication function (* ...). 
• g is a function that takes a single integer argument and returns a single integer. • li is a list of integers. 
• The value of (combine f g li) is f(g(l1), g(l2), g(l3), . . .), where the elements of li are denoted by l1, l2, l3, . . .. For example, (combine + add1 (list 3 4 5)) evaluates to 15. You may define helper functions if desired. 
 
2. Write a Scheme function (map-to-pairs h li), where: 
• h is a function that takes two integer argument and returns a single integer. 
 li is a list of integers whose length is even. 
• The value of (map-to-pairs h li) is a list of integers half as long as the input, given by (h(l1, l2), h(l3, l4), . . . . Again, the elements of li are denoted by l1, l2, l3, . . .. For example, (map-to-pairs * (list 3 4 5 6)) evaluates to (12 30). You may define helper functions if desired. 
 
3. Define a Scheme function (countEven li) that returns the number of even numbers in a list. For example: (countEven ‘(1 2 3 4 5 6) => 3 
 
 
4. The Fibonacci numbers are the series of numbers: 1 1 2 3 5 8 13 21 34... The first two numbers in the series are 1 and any following number in the series is determined by adding the two previous numbers. Therefore, the third number is the sum of the first two numbers 1 + 1 = 2; the fourth number is the sum of the second and third numbers 1 + 2 = 3; the fifth number is the sum of the third and fourth numbers 2 + 3 = 5, etc. Write a recursive procedure, fib, to find the nth Fibonacci number. This procedure should receive the index of the number to be found and then calculate this number. For example, (fib 6) should yield the sixth Fibonacci number and should return the number 8. Your function should be tail-recursive. 
 
5. Write a Scheme function that returns the union of two simple lists that represent sets. {Hint: You may use the built in member? function that returns true if an element is contained in a list} 

6. Write a Scheme function that takes a simple list of numbers as its parameter and returns the largest value. 